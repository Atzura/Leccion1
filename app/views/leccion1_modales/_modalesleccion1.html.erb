<div id="ejemplo1algo" class="reveal-modal large colormodales">
  	<h2>EJEMPLO 1.1 </h2>
 	 	<p> 
 	 		Un cliente ejecuta un pedido a una fábrica. La fábrica examina en su banco de datos la ficha del cliente, si el cliente es solvente entonces la empresa acepta el pedido; en caso contrario, rechazará el pedido. Redactar el algoritmo correspondiente. 
 	 		<br />
			Los pasos del algoritmo son: <br /><br />

				1.	Inicio.<br />
				2.	Leer el pedido.<br />
				3.	Examinar la ficha del cliente.<br />
				4.	Si el cliente es solvente, aceptar el pedido; en caso contrario, rechazar pedido.<br />
				5.	Fin.
		</p>
  	<a class="close-reveal-modal">&#215;</a>
</div>

<div id="ejemplo2algo" class="reveal-modal large colormodales">
  	<h2>EJEMPLO 1.2 </h2>
 	 	<p> 
 	 		Realizar la suma de todos los números pares entre 2 y 1,000.<br />
			El problema consiste en sumar 2 + 4 + 6 + 8 … + 1,000. Utilizaremos las palabras SUMA y NÚMERO para representar las sumas sucesivas (2+4), (2+4+6), (2+4+6+8), etc. 
 	 		<br />
			La solución se puede escribir con el siguiente algoritmo: <br /><br />

				1.	Inicio. <br />
				2.	Establecer SUMA a 0. <br />
				3.	Establecer NÚMERO a 2 <br />
				4.	Sumar NÚMERO a SUMA. El resultado será el nuevo valor de la suma (SUMA). <br />
				5.	Incrementar NÚMERO en 2 unidades. <br />
				6.	Si el NÚMERO =&lt; 1,000 repetir el paso 4; en caso contrario, escribir el último valor de SUMA y terminar el proceso. <br />
				7.	Fin.
		</p>
  	<a class="close-reveal-modal">&#215;</a>
</div>


<div id="datonumalgo" class="reveal-modal large colormodales">
  	<h2>DATOS NUMERICOS </h2>
 	 	<p> 
 	 		El tipo numérico es el conjunto de los valores numéricos. Estos pueden representarse en dos formas distintas:<br /><br />
				•	Tipo numérico entero (integer).<br />
				•	Tupo numérico real (real).<br />
				•	Enteros: el tipo entero es un subconjunto finito de los números enteros. Los enteros son números completos, no tienen componentes fraccionarios o decimales y pueden ser negativos o positivos. Ejemplos de números enteros son:
      				<br />
      					 5		  6<br />
					   -15	  	  4<br />
    				    20       17<br />
					  1340	 	 26<br /><br />

				•	Reales: el tipo real consiste en un subconjunto de números reales. Los números reales siempre tienen un punto decimal y pueden ser positivos o negativos. Un número real consta de un entero y una parte decimal. Los siguientes ejemplos son números reales:
					<br />
						0.80		3739.41<br />
					  3.7452	    -52.321<br />
					   -8.12		    3.0<br /><br />

			Existe un tipo de representación denominado exponencial o científica y que se utiliza para números muy grandes o muy pequeños. Así  367520100000000000000 se representa en notación científica descomponiéndolo en grupos de tres dígitos:
				<br />
				367   520   100   000   000   000   000 <br />
			Y posteriormente en forma de potencias de 10<br />
					3.675201 x 1020<br />
			Y de modo similar .0000000000302579 se representa como 3.02579 x 10-11
		</p>
  	<a class="close-reveal-modal">&#215;</a>
</div>


<div id="datologicoalgo" class="reveal-modal large colormodales">
  	<h2>DATOS LOGICOS (BOOLEANOS)</h2>
 	 	<p> 
 	 		El tipo lógico –también denominado booleano- es aquel dato que sólo puede tomar uno de dos valores: <br /><br />
			Cierto o verdadero (true) y falso (false).<br /><br />
			Este tipo de datos se utiliza para representar las alternativas (sí/no) a determinadas condiciones. Por ejemplo, cuando se pide si un valor entero es par, la respuesta será verdadera o falsa, según sea par o impar.
		</p>
  	<a class="close-reveal-modal">&#215;</a>
</div>


<div id="datocaracalgo" class="reveal-modal large colormodales">
  	<h2>DATOS TIPO CARACTER Y TIPO CADENA</h2>
 	 	<p> 
 	 		El tipo de dato carácter es el conjunto finito y ordenado de caracteres que la computadora reconoce. Un dato tipo carácter contiene un solo carácter. Los caracteres que reconocen la mayoría de computadoras son:
				<br /><br />
				•	Caracteres alfabéticos (A, B, C, …, Z) (a, b, c, …, z),<br />
				•	Caracteres numéricos (1, 2, …, 9, 0),<br />
				•	Caracteres especiales (+, -, *,  /, ^, ., ;, &lt;, &gt;, $, …).<br /><br />
			Una cadena (string) de caracteres es una sucesión de caracteres que se encuentran delimitados por una comilla (apóstrofo) o dobles comillas, según el tipo de lenguaje de programación. La longitud de una cadena de caracteres es el número de ellos comprendidos entre lo separadores o limitadores. Algunos lenguajes tienen datos tipo cadena.
				<br /><br />
				‘Hola Mortimer’<br />
				’12 de octubre de 1492’<br />
				‘Sr. Mckoy’
 	    </p>
  	<a class="close-reveal-modal">&#215;</a>
</div>

<div id="reglasprioalgo" class="reveal-modal large colormodales">
  	<h2>REGLAS DE PRIORIDAD</h2>
 	 	<p> 
 	 		Las expresiones que tienen dos o más operandos requieren unas reglas matemáticas que permitan desarrollar el orden de las operaciones se denominan reglas de prioridad o precedencia y son:
			<br /><br />
			1.	Las operaciones que están encerradas entre paréntesis se evalúan primero. Si existen diferentes paréntesis anidados (interiores unos a otros), las expresiones más internas se evalúan primero.
			<br />
			2.	Las operaciones aritméticas dentro de una expresión suelen seguir el siguiente orden de prioridad:
			<br />
				•	Operador exponencial (^, ↑ o bien **),<br />
				•	Operadores *, /, <br />
				•	Operadores div y mod,<br />
				•	Operadores +, -.<br /><br />

				En caso de coincidir en varios operadores de igual prioridad en una expresión o subexpresión encerrada entre paréntesis, el orden de prioridad en este caso es de izquierda a derecha.
 	    </p>
  	<a class="close-reveal-modal">&#215;</a>
</div>


<div id="ejemplo3algo" class="reveal-modal large colormodales">
  	<h2>EJEMPLO 1.3</h2>
 	 	<p> 
 	 		¿Cuál es el resultado de las siguientes expresiones?<br />

			a)	3 + * 14						b) 8 + 7 * 3 + 4 * 6 <br /><br />
		
			Solución <br /><br />
			a)	3 + 6 * 14					b) 8 + 7 * 3 + 4 * 6 <br />

				3 + 84  					   8 +  21	   24<br />
	
   				87						   	  29        +     24 <br />
	    		
	    		53
 	    </p>
  	<a class="close-reveal-modal">&#215;</a>
</div>


<div id="ejemplo4algo" class="reveal-modal large colormodales">
  	<h2>EJEMPLO 1.4</h2>
 	 	<p> 
 	 		Convertir en expresiones aritméticas algorítmicas las siguientes expresiones algebraicas:<br />
					5 ∙ (x + y)                                  a2 + b2<br /><br />
					
					x  + y                                         x
     					 w                                         y
     				 u + a
			<br /><br />
			Los resultados serán:<br /><br />

					5 * (x + y) <br />
					a ^ 2 + b ^ 2 <br />
					(x + y) / (u + w/a) <br />
					x / y * (z + w)
 	    </p>
  	<a class="close-reveal-modal">&#215;</a>
</div>


<div id="ejemplo5algo" class="reveal-modal large colormodales">
 	<div class="row">
 		<h2>EJEMPLO 1.5 </h2>
 			 <p> 
 	 			Un ejemplo de lo anterior sería, el problema de encontrar la superficie y la longitud de un círculo, el cual se puede dividir en tres problemas más simples o subproblemas.  
 	 			<br />
			</p>
	</div>
	<div class="row">
			<div class="ten columns centered">
				<%= image_tag ("ejemplo1.5.jpg")%>
			</div>
	</div>
	
	<a class="close-reveal-modal">&#215;</a>
</div>

<div id="diaflujoalgo" class="reveal-modal large colormodales">
  	<h2>DIAGRAMAS DE FLUJO</h2>
 	 	<p> 
 	 		Un diagrama de flujo (flowchart) es una representación gráfica de un algoritmo. Los símbolos más utilizados en un diagrama de flujo son:<br /><br />
 	 		
 	 		• Las líneas de flujo (         ) representan el flujo secuencial de la lógica del programa.<br />
			• Un rectángulo (           ) significa algún tipo de proceso en la computadora, es decir, acciones a realizar.<br />
			• El paralelogramo (         ) es un símbolo de entrada/salida que representa cualquier tipo de entrada o salida desde el programa o sistema; por ejemplo, entrada de teclado, salida en impresora o pantalla, etc. 
			<br />
			• El símbolo rombo (      ) es una caja de decisión que representa respuestas sí/no o bien diferentes  alternativas.<br />
			• Cada diagrama comienza y termina con un símbolo terminal (           ).<br />
			• Un pequeño círculo (  ) es un conector y se utiliza para unir caminos, tras roturas previas del flujo del algoritmo.
 	    </p>
  	<a class="close-reveal-modal">&#215;</a>
</div>


<div id="ejemplo6algo" class="reveal-modal large colormodales">
 	<div class="row">
 		<h2>EJEMPLO 1.6 </h2>
 			 <p> 
 	 			Suma de los números pares comprendidos entre 2 y 100.
 	 			<br />
			</p>
	</div>
	<div class="row">
			<div class="ten columns centered">
				<%= image_tag ("ejemplo 16.jpg")%>
			</div>
	</div>
	
	<a class="close-reveal-modal">&#215;</a>
</div>



<div id="ejemplo7algo" class="reveal-modal large colormodales">
 	<div class="row">
 		<h2>EJEMPLO 1.7 </h2>
 			 <p> 
 	 			Se desea realizar el algoritmo que resuelve el siguiente problema: Cálculo de los salarios mensuales de los empleados de una empresa, sabiendo que éstos se calculan en base a las horas semanales trabajadas y de acuerdo a un precio especificado por horas. Si se pasan de cuarenta horas semanales, las horas extraordinarias se pagarán de 1,5 veces la hora ordinaria. Los cálculos son:
				<br /><br />	
					1.	Leer los datos del archivo de la empresa, hasta que se encuentre la ficha final del archivo (HORAS, PRECIO_HORA, NOMBRE).<br />
					2.	Si HORAS&lt;=40, entonces SALARIO es el producto de horas por PRECIO_HORA.<br />
					3.	Si HORAS &gt;40, entonces SALARIO es la suma de 40 veces PRECIO_HORA más 1,5 veces PRECIO_HORA por (HORAS - 40)<br /><br />
				El diagrama de flujo completo del algoritmo se indica a continuación.
			</p>
	</div>
	<div class="row">
			<div class="ten columns centered">
				<%= image_tag ("ejemplo17.jpg")%>
			</div>
	</div>
	
	<a class="close-reveal-modal">&#215;</a>
</div>

<div id="diaNSalgo" class="reveal-modal large colormodales">
  	<h2>DIAGRAMAS DE NASSI-SCHNEIDERAN </h2>
 	 	<p> 
 	 		El diagrama N-S de Nassi-Schneiderman –también conocido como diagrama de Chapin- es como un diagrama de flujo en el que se omiten las flechas de unión y las cajas son contiguas. 
 	 		<br /><br />
 	 		Las acciones sucesivas se escriben en cajas sucesivas y, como en los diagramas de flujo, se pueden escribir diferentes acciones en una caja.
 	    </p>
  	<a class="close-reveal-modal">&#215;</a>
</div>


<div id="ejemplo8algo" class="reveal-modal large colormodales">
 	<div class="row">
 		<h2>EJEMPLO 1.8 </h2>
 			 <p> 
 	 			Un algoritmo se representa con un rectángulo en el que cada banda es una acción a realizar:	
			</p>
	</div>
	<div class="row">
			<div class="ten columns centered">
				<%= image_tag ("ejemplo 1.8.png")%>
			</div>
	</div>
	
	<a class="close-reveal-modal">&#215;</a>
</div>





<div id="ejemplo1prog" class="reveal-modal large colormodales">
 	<div class="row">
 		<h2>EJEMPLO 3.1 </h2>
			<div class="ten columns centered">
				<%= image_tag ("ejemplo3.1.jpg")%>
			</div>
	</div>
	
	<a class="close-reveal-modal">&#215;</a>
</div>

<div id="ejemplo2prog" class="reveal-modal large colormodales">
 	<div class="row">
 		<h2>EJEMPLO 3.2 </h2>
			<div class="ten columns centered">
				<%= image_tag ("ejemplo 3.2.jpg")%>
			</div>
	</div>
	
	<a class="close-reveal-modal">&#215;</a>
</div>



<div id="ejercicio1algo" class="reveal-modal large colormodales">
 	<div class="row">
 		<h2>ALGORITMO PARA CAMBIAR UNA LLANTA </h2>
 		<br /> <br />>
			<div class="ten columns centered">
				<h3> Viajas en carretera; de repente te das cuenta que se ha ponchado una llanta del coche.<br />
				Realizar el algorimo necesario para cambiar dicha llanta</h3>
			</div>
	</div>
	
	<a class="close-reveal-modal">&#215;</a>
</div>
